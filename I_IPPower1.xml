<?xml version="1.0" encoding="ISO-8859-1"?>
<implementation >
  <settings>

  </settings>
	<functions>

		
		local DEFAULT_POLL_INTERVAL = 30
		local FIRST_SW = 60 -- don't change this
		local LAST_SW = 63 -- change to 67 for the 8 port version
		local DEBUG_MODE = false
		
		local ipAddress
		local childDeviceIndex = {}
		
		local function log(text, level)
        	luup.log("RoomControl: " .. text, (level or 1))
    	end

		local function debug(text)
         	if (DEBUG_MODE == true) then
              	log("debug: " .. text, 50)
           	end
        end
		
		function ipPowerPoller()
			debug("Polling IP Power Device")
			local url = "http://" .. ipAddress .. "/Set.cmd?CMD=GetPower"
			luup.call_timer("ipPowerPoller", 1, DEFAULT_POLL_INTERVAL, "", "")
			
			debug("Calling status  " .. url)
			local status, data = luup.inet.wget(url)
			if (data) then
				debug("Received response " .. data)
			else
				log("Received empty response")
			end
			for v = FIRST_SW,LAST_SW do
				local value = string.match(data, "P"..v.."=(%d),")
				if (value) then 
					luup.variable_set("urn:upnp-org:serviceId:SwitchPower1", "Status", value, childDeviceIndex["P"..v])
				else
					log("Value is empty")
				end
			end
		end
		
		function ipPowerStartup(lul_device)
  		  	debug("IP Power Switch #" .. lul_device .. " creating children")
    		child_devices = luup.chdev.start(lul_device)

   		 	for v = FIRST_SW,LAST_SW do
				luup.chdev.append(lul_device,child_devices, "P" .. v, "Switch" .. v, "urn:schemas-micasaverde-com:device:GenericIO:1", "D_IPPower1.xml", "", "", false)
    		end

   			luup.chdev.sync(lul_device, child_devices)
   			
   			for k, v in pairs(luup.devices) do
	        	if (v.device_num_parent == lul_device) then
					childDeviceIndex[v.id]=k
        		end
    	    end
   			
   			ipAddress = luup.devices[lul_device].ip
   			ipPowerPoller()
		end

	</functions>

	<startup>ipPowerStartup</startup>

	<actionList>
		<action>
			<serviceId>urn:upnp-org:serviceId:SwitchPower1</serviceId>
			<name>SetTarget</name>
			<job>
				local url = "http://" .. ipAddress .. "/Set.cmd?CMD=SetPower+" .. luup.devices[lul_device].id .. "=" .. lul_settings.newTargetValue
				luup.log("Sending command " .. url)
				local status, data = luup.inet.wget(url)
				if (data) then
					debug("Received response " .. data)
				else
					log("Received empty response")
				end
				local value = string.match(data, luup.devices[lul_device].id.."=(%d)") 
				if (value) then 
					luup.variable_set("urn:upnp-org:serviceId:SwitchPower1", "Status", value, lul_device)
				else
					log("Value is empty")
				end
			</job>
			</action>
		</actionList>
</implementation>
